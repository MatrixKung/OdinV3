#pragma once

static FAccuracySettings OldAccuracy{};
static FRecoilSettings OldRecoil{};
static FAccuracySettings NewAccuracy{};
static FRecoilSettings NewRecoil{};

bool saved_recoil = false;
void setRecoil(bool state)
{
	if (!saved_recoil)
	{
		OldRecoil = Globals::LocalWeapon->m_RecoilSettings;
		saved_recoil = true;
	}

	if (state)
	{
		NewRecoil.bUsesRecoil = true;
		NewRecoil.fRecoilCenterDelay = 0.0f;
		NewRecoil.fRecoilReductionPerSec = 0.0f;
		NewRecoil.fRecoilSmoothRate = 0.0f;
		Globals::LocalWeapon->m_RecoilSettings = NewRecoil;
	}
	else if (!state && saved_recoil)
	{
		Globals::LocalWeapon->m_RecoilSettings = OldRecoil;
	}
}

bool saved_spread = false;
void setSpread(bool state)
{
	if (!saved_spread)
	{
		OldAccuracy = Globals::LocalWeapon->m_AccuracySettings;
		saved_spread = true;
	}

	if (state)
	{
		NewAccuracy.bUsesAdvancedAccuracy = true;
		NewAccuracy.fAccuracyGainPerSec = 0.0f;
		NewAccuracy.fMaxAccuracy = 1.0f;
		NewAccuracy.fMinAccuracy = 1.0f;
		Globals::LocalWeapon->m_AccuracySettings = NewAccuracy;
	}
	else if (!state && saved_recoil)
	{
		Globals::LocalWeapon->m_AccuracySettings = OldAccuracy;
	}
}

void Exploits() {
	ATgPawn* LocalPawn = (ATgPawn*)Globals::LocalPawn;

	if (!Globals::LocalWeapon ||
		!Globals::LocalPawn) {
		return;
	}

	if (config_system.item.glow)
		LocalPawn->r_bIsWallHacking = true;
	else
		LocalPawn->r_bIsWallHacking = false;

	if (config_system.item.spread)
		setSpread(true);
	else
		setSpread(false);

	if (config_system.item.recoil)
		setRecoil(true);
	else
		setRecoil(false);

	if (config_system.item.thirdPerson)
		Globals::LocalWeapon->m_fForce3PPersistTimer = 5;
	else
		Globals::LocalWeapon->m_fForce3PPersistTimer = 0;
}